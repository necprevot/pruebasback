<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <div class="auth-logo">
                <img src="/img/logo.png" alt="BBFermentos" class="logo-img">
                <h1>BBFermentos</h1>
            </div>
            <h2>¿Olvidaste tu contraseña?</h2>
            <p>Ingresa tu email y te enviaremos un enlace para recuperarla</p>
        </div>

        <!-- Alertas -->
        <div id="alertContainer"></div>

        <form id="forgotPasswordForm" class="auth-form">
            <div class="form-group">
                <label for="email">
                    <span class="label-icon">📧</span>
                    Correo Electrónico
                </label>
                <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    required 
                    class="form-input"
                    placeholder="tu@email.com"
                    autocomplete="email">
                <div class="field-error" id="emailError"></div>
                <div class="field-help">Te enviaremos un enlace de recuperación a este email</div>
            </div>

            <button type="submit" class="btn-auth btn-primary" id="submitBtn">
                <span class="btn-text">📧 Enviar Enlace de Recuperación</span>
                <span class="btn-spinner" style="display: none;">🔄</span>
            </button>
        </form>

        <div class="auth-divider">
            <span>o</span>
        </div>

        <div class="auth-footer">
            <p>¿Recordaste tu contraseña?</p>
            <a href="/login" class="btn-auth btn-secondary">
                Volver al Login
            </a>
        </div>

        <div class="auth-help">
            <h4>🔐 ¿Cómo funciona?</h4>
            <ul>
                <li>Ingresa el email de tu cuenta</li>
                <li>Revisa tu bandeja de entrada</li>
                <li>Haz clic en el enlace que recibirás</li>
                <li>Crea tu nueva contraseña</li>
                <li>El enlace expira en 1 hora</li>
            </ul>
        </div>

        <div class="auth-help">
            <h4>❓ ¿No recibes el email?</h4>
            <ul>
                <li>Revisa tu carpeta de spam</li>
                <li>Verifica que el email sea correcto</li>
                <li>Espera unos minutos e intenta de nuevo</li>
                <li>Contacta a soporte si persiste el problema</li>
            </ul>
        </div>
    </div>
</div>

<script>
// Configuración
const FORGOT_PASSWORD_ENDPOINT = '/api/sessions/forgot-password';

// Inicializar formulario
document.addEventListener('DOMContentLoaded', () => {
    initializeForgotPasswordForm();
});

function initializeForgotPasswordForm() {
    const form = document.getElementById('forgotPasswordForm');
    if (!form) return;

    // Limpiar errores al escribir
    form.querySelectorAll('.form-input').forEach(input => {
        input.addEventListener('input', () => {
            clearFieldError(input.id);
        });
    });

    // Manejar submit del formulario
    form.addEventListener('submit', handleForgotPassword);

}

async function handleForgotPassword(event) {
    event.preventDefault();
    
    const form = event.target;
    const formData = new FormData(form);
    const submitBtn = document.getElementById('submitBtn');
    const btnText = submitBtn.querySelector('.btn-text');
    const btnSpinner = submitBtn.querySelector('.btn-spinner');
    
    // Limpiar errores previos
    clearAllErrors();
    
    // Obtener email
    const email = formData.get('email').trim();
    
    // Validaciones básicas
    if (!email) {
        showFieldError('email', 'El email es requerido');
        return;
    }
    
    if (!isValidEmail(email)) {
        showFieldError('email', 'Formato de email inválido');
        return;
    }
    
    // UI de carga
    submitBtn.disabled = true;
    btnText.style.display = 'none';
    btnSpinner.style.display = 'inline';
    
    try {
        
        const response = await fetch(FORGOT_PASSWORD_ENDPOINT, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email })
        });
        
        const data = await response.json();
        
        if (response.ok && data.status === 'success') {
            // Solicitud exitosa
            showAlert(
                '✅ Si tu email existe en nuestro sistema, recibirás un enlace de recuperación en breve. Revisa tu bandeja de entrada.',
                'success'
            );

            
            // Limpiar formulario
            form.reset();
            
            // Opcional: redirigir a login después de un momento
            setTimeout(() => {
                // showAlert('Puedes cerrar esta página y revisar tu email', 'info');
            }, 3000);
            
        } else {
            // Por seguridad, siempre mostramos el mismo mensaje
            showAlert(
                '✅ Si tu email existe en nuestro sistema, recibirás un enlace de recuperación en breve. Revisa tu bandeja de entrada.',
                'success'
            );
            
            form.reset();
        }
        
    } catch (error) {
        
        showAlert('Error de conexión. Por favor intenta de nuevo.', 'error');
    } finally {
        // Restaurar UI
        submitBtn.disabled = false;
        btnText.style.display = 'inline';
        btnSpinner.style.display = 'none';
    }
}

// Validar email
function isValidEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
}

// Funciones de utilidad
function showFieldError(fieldId, message) {
    const errorElement = document.getElementById(fieldId + 'Error');
    if (errorElement) {
        errorElement.textContent = message;
        errorElement.style.display = 'block';
    }
    
    const field = document.getElementById(fieldId);
    if (field) {
        field.classList.add('error');
    }
}

function clearFieldError(fieldId) {
    const errorElement = document.getElementById(fieldId + 'Error');
    if (errorElement) {
        errorElement.textContent = '';
        errorElement.style.display = 'none';
    }
    
    const field = document.getElementById(fieldId);
    if (field) {
        field.classList.remove('error');
    }
}

function clearAllErrors() {
    const errorElements = document.querySelectorAll('.field-error');
    errorElements.forEach(el => {
        el.textContent = '';
        el.style.display = 'none';
    });
    
    const fields = document.querySelectorAll('.form-input');
    fields.forEach(field => field.classList.remove('error'));
}

function showAlert(message, type = 'info') {
    const alertContainer = document.getElementById('alertContainer');
    if (!alertContainer) return;

    const alertTypes = {
        success: { class: 'alert-success', icon: '✅' },
        error: { class: 'alert-danger', icon: '❌' },
        warning: { class: 'alert-warning', icon: '⚠️' },
        info: { class: 'alert-info', icon: 'ℹ️' }
    };

    const alert = alertTypes[type] || alertTypes.info;
    
    const alertHtml = `
        <div class="alert ${alert.class}" style="margin-bottom: 15px;">
            ${alert.icon} ${message}
            <button onclick="this.parentElement.remove()" class="alert-close">&times;</button>
        </div>
    `;
    
    alertContainer.innerHTML = alertHtml;
    
    // Auto-remover después de 10 segundos
    setTimeout(() => {
        const alertElement = alertContainer.querySelector('.alert');
        if (alertElement) alertElement.remove();
    }, 10000);
}

</script>